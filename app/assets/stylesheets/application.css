/*
 * This is a manifest file that'll be compiled into application.css, which will include all the files
 * listed below.
 *
 * Any CSS (and SCSS, if configured) file within this directory, lib/assets/stylesheets, or any plugin's
 * vendor/assets/stylesheets directory can be referenced here using a relative path.
 *
 * You're free to add application-wide styles to this file and they'll appear at the bottom of the
 * compiled file so the styles you add here take precedence over styles defined in any other CSS
 * files in this directory. Styles in this file should be added after the last require_* statement.
 * It is generally better to create a new file per style scope.
 *
 *= require_tree .
 *= require_self
 */

body {
  font-family: Helvetica;
}

/* class for empty divs */
div.invisible {
  display: none;
}

/* start map style */
#map {
  margin: auto;
  display: flex;
  flex-flow: column;
  min-height: 90vh;
  /* Make sure drop down menus are on top of map */
  z-index: 1;
}
/* end map style */

a {
  outline: 0;
}

table {
  font-family: Arial, Helvetica, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td, th {
  border: 1px solid #ddd;
  padding: 8px;
}

tr:nth-child(even){background-color: #f2f2f2;}

tr:hover {background-color: #ddd;}

th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
  background-color: #04AA6D;
  color: white;
}

.label-column {
  float: left;
  max-width: 10%;
  min-width: 120px;
  padding: 2px;
}

.select-column {
  float: left;
  max-width: 20%;
  min-width: 270px;
  padding: 2px;
}

.search-column {
  float: left;
  max-width: 4%;
  min-width: 123px;
  padding: 2px;
}

.download-column {
  float: left;
  max-width: 10%;
  min-width: 110px;
  padding: 2px;
}

.row:after {
  content: "";
  display: table;
  clear: both;
}

#cover {
  display: none;
}

button:active, input:active {
  transform: translate(0.5px,0.5px);
}

button, input {
  display: inline-block;
  border-radius: 4px;
  background-color: darkseagreen;
  border: none;
  color: #FFFFFF;
  text-align: center;
  font-size: 12px;
  padding: 2px;
  width: 120px;
  transition: all 0.5s;
  cursor: pointer;
  margin: 2px;
}

input:hover {
  border: 1px solid black;
}

input, select, textarea{
    color: black;
}

input:hover:after {
  content: '\2193';
  position: absolute;
  opacity: 0;
  top: 0;
  transition: 0.5s;
}

button:disabled,
button[disabled]{
  opacity: 0.5;
  pointer-events: none;
}

a:disabled,
a[disabled]{
  pointer-events: none;
}

/* start utilities */
.border-bottom-0 {
  border-bottom: 0 !important;
}

.round-checkbox {
  margin-right: 60px;
}
/* end utilities */

/* start tooltip */
.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black;
}

.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  border-radius: 6px;
  padding: 5px 0;
  position: absolute;
  z-index: 1;
  top: -11px;
  left: 105%;
  font-size: 12px;
}

.tooltip .tooltiptext::after {
  content: "";
  position: absolute;
  top: 50%;
  right: 100%;
  margin-top: -5px;
  border-width: 5px;
  border-style: solid;
  border-color: transparent black transparent transparent;
}
.tooltip:hover .tooltiptext {
  visibility: visible;
}
/* end tooltip */


/* start toggle-animation-btn */
button.toggle-animation-btn span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}

button.toggle-animation-btn:hover span:after {
  opacity: 1;
  right: 0;
}
/* end toggle-animation-btn */

/* start animations-checkbox */

.toggle {
  --width: 123px;
  --height: calc(var(--width) / 5);

  position: relative;
  display: inline-block;
  width: var(--width);
  height: var(--height);
  border-radius: var(--height);
  cursor: pointer;
}

/* disable default checkbox appearance */
.toggle input {
  opacity: 0;
  width: 0;
  height: 0;
}

.toggle .labels {
  position: absolute;
  top: 14px;
  left: 40px;
  width: 192%;
  height: 100%;
  color: #4d4d4d;
  font-size: 10.7px;
  font-family: sans-serif;
  transition: all 0.4s ease-in-out;
}

.toggle .slider-round {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: var(--height);
  border: 2px solid #aaa;
  transition: all 0.4s ease-in-out;
}

.toggle .labels::after {
  content: attr(data-off);
  position: absolute;
  opacity: 1;
  transition: all 0.4s ease-in-out;
}

.toggle .labels::before {
  content: attr(data-on);
  position: absolute;
  opacity: 0;
  transition: all 0.4s ease-in-out;
}

.toggle input:checked~.labels::after {
  opacity: 0;
}

.toggle input:checked~.labels::before {
  opacity: 1;
}

.slider-round {
  position: absolute;
  cursor: pointer;
  top: 5px;
  left: 0;
  right: 0;
  bottom: 4.5px;
  font-size: 12px;
  padding-top: 10px;
  padding-right: 57px;
  text-align: right;
  background-color: white;
  -webkit-transition: .4s;
  transition: all .4s ease-in-out;
  border-radius: 34px;
}

.slider-round:before {
  position: absolute;
  content: '';
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: lightgray;
  -webkit-transition: .4s;
  transition: all .4s ease-in-out;
  border-radius: 50%;
}

input:checked + .slider-round {
  text-align: left;
  padding-right: 54px;
  border: 2px solid darkseagreen;
}

input:focus + .slider-round {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider-round:before {
  background-color: darkseagreen;
}

/* end animations-checkbox */

/* start dropdown-search */
input.dropdown-search {
  border: 1px solid black;
  background-color: white;
  width: 257px; /* Wide enough to handle longest metro name */
}
/* end dropdown-search */

/* start search-btn */
button.search-btn span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}


button.search-btn span:after {
  content: '\002315';
  position: absolute;
  font-size: 17px;
  opacity: 0;
  bottom: 0px;
  transition: 0.5s;
}

button.search-btn:hover span {
  padding-right: 15px;
}

button.search-btn:hover span:after {
  opacity: 1;
  right: 0;
}
/* end search-btn */

/* start download-btn */
button.download-btn span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}

button.download-btn span:after {
  content: '\2193';
  position: absolute;
  opacity: 0;
  top: 0;
  transition: 0.5s;
}

button.download-btn:hover span {
  padding-right: 15px;
}

button.download-btn:hover span:after {
  opacity: 1;
  right: 0;
}

button.download-btn:hover span {
  padding-right: 15px;
}

button.download-btn:hover span:after {
  opacity: 1;
  right: 0;
}
/* end download-btn */

/* start dropdown filter classes */
/* Dropdown Button */
.dropbtn {
  background-color: #04AA6D;
  color: white;
  padding: 16px;
  font-size: 16px;
  border: none;
  cursor: pointer;
}

/* Dropdown button on hover & focus */
.dropbtn:hover, .dropbtn:focus {
  background-color: #3e8e41;
}

/* The search field */
#myInput {
  box-sizing: border-box;
  background-image: url('searchicon.png');
  background-position: 14px 12px;
  background-repeat: no-repeat;
  font-size: 16px;
  padding: 14px 20px 12px 45px;
  border: none;
  border-bottom: 1px solid #ddd;
}

/* The search field when it gets focus/clicked on */
#myInput:focus {outline: 3px solid #ddd;}

/* The container <div> - needed to position the dropdown content */
.dropdown {
  position: relative;
  display: inline-block;
}

/* Dropdown Content (Hidden by Default) */
.dropdown-content {
  display: none;
  position: absolute;
  background-color: #f6f6f6;
  min-width: 230px;
  border: 1px solid #ddd;
  z-index: 9;
}

/* Links inside the dropdown */
.dropdown-content a {
  color: black;
  padding: 12px 16px;
  text-decoration: none;
  display: block;
}

/* Change color of dropdown links on hover */
.dropdown-content a:hover {background-color: #f1f1f1}

/* Show the dropdown menu (use JS to add this class to the .dropdown-content container when the user clicks on the dropdown button) */
.show {display:block;}
/* end dropdown filter classes */

/* dot */
.dot {
  margin:20px auto;
  color: seagreen;
  width:95px;
  height:45px;
  --d:radial-gradient(farthest-side,currentColor 90%,#0000);
  background:var(--d),var(--d),var(--d),var(--d);
  background-size:20px 20px;
  background-repeat:no-repeat;
  animation: m 1s infinite;
  position: fixed;
  top: 50%;
  right: 50%;
}

@keyframes m {
  0%  {background-position:calc(0*100%/3) 50%, calc(1*100%/3) 50% , calc(2*100%/3) 50%, calc(3*100%/3) 50% }
  33% {background-position:calc(0*100%/3) 0  , calc(1*100%/3) 100%, calc(2*100%/3) 0  , calc(3*100%/3) 100%}
  66% {background-position:calc(1*100%/3) 0  , calc(0*100%/3) 100%, calc(3*100%/3) 0  , calc(2*100%/3) 100%}
  100%{background-position:calc(1*100%/3) 50%, calc(0*100%/3) 50% , calc(3*100%/3) 50%, calc(2*100%/3) 50% }
}
